generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  admin
  user
}

enum deviceType {
  android
  apple
}

model User {
  id              Int         @id @default(autoincrement())
  name            String
  email           String      @unique
  password        String
  role            Role        @default(user)
  isEmailVerified Boolean     @default(false) @map("is_email_verified")
  deviceId        String?     @map("device_id")
  deviceToken     String?     @map("device_token")
  deviceType      deviceType? @map("device_type")

  notifications notification[] @relation(name: "User_notifications")

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
}

model Geofence {
  id              Int     @id @default(autoincrement())
  name            String
  description     String
  longitude       Float
  latitude        Float
  radiusSecondary Float  @default(1000) @map("radius_secondary")
  radiusPrimary   Float   @default(1000) @map("radius_primary")
  archive         Boolean @default(false)

  incidentOn DateTime @map("incident_on")
  reportedOn DateTime @map("reported_on")
  verified   Boolean  @default(false)
  dataSource String   @map("data_source")

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
}

model notification {
  id     Int     @id @default(autoincrement())
  title  String
  body   String
  isRead Boolean @default(false)

  userId Int?  @map("user_id")
  user   User? @relation(name: "User_notifications", fields: [userId], references: [id], onDelete: Cascade, onUpdate: NoAction)

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
}
